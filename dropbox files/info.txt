//====Dropbox OAuth sample=======================//
var ocl = DropboxClient.CreateOAuthClient("consumerKey", "consumerSecret");
var ai = ocl.GetAuthorizeInfo();
//Access ai.AuthorizeUrl by Browser and signin your account 
//After signin you can get AccessToken 
var t = ocl.GetAccessToken(ai.RequestToken, ai.RequestTokenSecret);
var cl = new DropboxClient("consumerKey", "consumerSecret", t.Token, t.TokenSecret);

//====Dropbox Sync sample=======================//
var ai = cl.GetAccountInfo();

var cm1 = new GetMetadataCommand();
cm1.Path = "/MyFile.txt";
var rr = cl.GetMetadata(cm1);

var cm2 = new UploadFileCommand();
cm2.FolderPath = "/";
cm2.FileName = "FileNameOnDropbox.txt";
Byte[] bb = ...//You get byte data from your data source.
cm2.LoadFileData(bb);
cl.UploadFile(cm2);


//====Dropbox Async sample(You can use this method on silverlight or WindowsPhone7)===//
//Execute callback on UI thread
cl.SetDispatcher(dispatcher);
//Observe error event when async call
cl.Error += new EventHandler<AsyncCallErrorEventArgs>(OAuthClient_Error);
cl.GetAccountInfo(new GetAccountCommand(), ai => Console.WriteLine(ai.EMail));

var cm1 = new GetMetadataCommand();
cm1.Path = "/";
cl.GetMetadata(cm1, metaData => Console.WriteLine(metaData.Path));

//Observe Uploading data size.You can use it for progress bar feature.
cl.Uploading += (o, e) => Console.WriteLine("Total upload size is " + e.TotalSize);
var cm2 = new UploadFileCommand();
cm2.FolderPath = "/";
cm2.FileName = "FileNameOnDropbox.txt";
Byte[] bb = ...//You get byte data from your data source.
cm2.LoadFileData(bb);
cl.UploadFile(cm2, response => Console.WriteLine(response.BodyText));

//====Dropbox great articles from other site=================//
Use Dropbox with your ASP.NET application by _tasos