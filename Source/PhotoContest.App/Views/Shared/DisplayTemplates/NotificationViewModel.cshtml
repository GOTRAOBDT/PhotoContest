@using PhotoContest.Models.Enumerations
@model PhotoContest.App.Models.Notification.NotificationViewModel

@if (Model.IsRead)
{
    ViewBag.background = "thumbnailRead";
}
else
{
    ViewBag.background = "thumbnail";
}
<div class="row @ViewBag.background" id="@Model.Id">
    @if (Model.NotificationType == NotificationType.Vote)
    {
        <p><strong>
            @Model.SenderUsername.ToUpper() has voted to your Picture:
            @Html.ActionLink(Model.PictureTitle, "Index", "Pictures", new { id = Model.PictureId }, new {@clas="btn"})
            in @Html.ActionLink(Model.ContestTitle, "GetContestById", "Contests", new { id = Model.ContestId }, new { @clas = "btn" })
    </strong> 
        </p>
        <h5>Date: @Model.CreatedOn.ToString("dd.MM.yyyy hh:mm")</h5>
    }

    @if (!Model.IsRead)
    {
        using (Ajax.BeginForm("MarkAsRead", "Notifications", new {Model.Id}, new AjaxOptions {HttpMethod = "POST", UpdateTargetId = "notification-" + @Model.Id, InsertionMode = InsertionMode.ReplaceWith}, new {id = "notification-" + Model.Id}))
        {
            @Html.AntiForgeryToken()
            <button type="submit" onclick="changeBackground(@Model.Id)" class="btn btn-sm btn-default pull-right">Mark As Read</button>
        }
    }
</div>

<script>
    function changeBackground(parameters) {
        $("#" + parameters).removeAttr("class");
        $("#" + parameters).attr("class", "row thumbnailRead");
    }
</script>